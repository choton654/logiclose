import React, { useEffect, useState, useRef } from 'react'
import Head from "next/head"
import dynamic from "next/dynamic"
import Image from "next/image"
import { Box, Button, Typography } from '@mui/material';
import Loader from '../../components/Loader';
import oval2 from "../../../public/WebView/Oval2.png"
import locationOverview from "../../../public/WebView/LocationOverview.png"
import employeers from "../../../public/WebView/Employeers.png"
import employeersImg from "../../../public/WebView/unsplash_Of_m3hMsoAA.png"
import { logicloseState } from '../../features/logicloseSlice';
import { useSelector } from 'react-redux';
import { useGetEmployersQuery, useGetLocationSummaryQuery } from '../../services/query';
import { getData } from '../../utils/localStorage';
import { FreeMode, Navigation, Thumbs } from "swiper"
import { Swiper, SwiperSlide } from "swiper/react"
import IsAuthHOC from '../../components/IsAuthHOC'
import { useMemo } from 'react';
import { useRouter } from 'next/router';
import { BASE_URL } from '../../utils/api';
import { useReactToPrint } from 'react-to-print'
import { Page, Document } from '@react-pdf/renderer'

const LogiCLoseWebLayout = dynamic(
    () => import("../../components/Logiclose/LogiCLoseWebLayout").then((p) => p.default),
    {
        ssr: false,
        loading: () => <Loader />,
    }
);

const LocationOverViewComp = ({
    locationSummary, locationImages, employeer, isDrawerExpand
}) => {
    return (
        <div>
            <Box className='flex flex-col mt-4 py-6 pl-6'>
                <Typography variant='h5' sx={{ color: "#061D2E", fontWeight: 600, fontFamily: "Poppins" }}>
                    {locationSummary ? locationSummary.title : 'Location Summary'}
                </Typography>
                <Box className='flex flex-row mt-4 relative duration-500'
                // sx={{ height: isDrawerExpand ? '100%' : '90vh' }}
                >
                    <Box sx={{ width: '15%', position: "absolute", top: 0, right: 0 }}>
                        <Image src={oval2} layout='responsive' />
                    </Box>
                    <Box sx={{ width: '96%' }}>
                        <Box className='flex flex-row justify-between mt-4' sx={{ width: "85%" }}>
                            {locationSummary && locationSummary.locationSummary.length > 0 && locationSummary.locationSummary.slice(0, 2).map((item, idx) =>
                                item.subTitleText.trim() !== '' &&
                                <Box key={idx} sx={{ width: '50%', mr: 2 }}>
                                    <Typography variant='subtitle2' sx={{ color: "#d4d4d4", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitle ? item.subTitle : 'Location Address'}
                                    </Typography>
                                    <Typography variant='subtitle2' sx={{ color: "#64748b", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitleText ? item.subTitleText : '(no address found)'}
                                    </Typography>
                                </Box>
                            )}
                        </Box>
                        <Box className='flex flex-row justify-between mt-4' sx={{ width: "85%" }}>
                            {locationSummary && locationSummary.locationSummary.length > 2 && locationSummary.locationSummary.slice(2, 4).map((item, idx) =>
                                item.subTitleText.trim() !== '' &&
                                <Box key={idx} sx={{ width: '50%' }}>
                                    <Typography variant='subtitle2' sx={{ color: "#d4d4d4", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitle ? item.subTitle : 'Location Address'}
                                    </Typography>
                                    <Typography variant='subtitle2' sx={{ color: "#64748b", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitleText ? item.subTitleText : '(no address found)'}
                                    </Typography>
                                </Box>
                            )}
                        </Box>
                        <Box className='flex flex-row justify-between mt-4' sx={{ width: "85%" }}>
                            {locationSummary && locationSummary.locationSummary.length > 4 && locationSummary.locationSummary.slice(4, 6).map((item, idx) =>
                                item.subTitleText.trim() !== '' &&
                                <Box key={idx} sx={{ width: '50%' }}>
                                    <Typography variant='subtitle2' sx={{ color: "#d4d4d4", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitle ? item.subTitle : 'Location Address'}
                                    </Typography>
                                    <Typography variant='subtitle2' sx={{ color: "#64748b", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitleText ? item.subTitleText : '(no address found)'}
                                    </Typography>
                                </Box>
                            )}
                        </Box>
                        <Box className='flex flex-row justify-between mt-4' sx={{ width: "85%" }}>
                            {locationSummary && locationSummary.locationSummary.length > 6 && locationSummary.locationSummary.slice(6, 8).map((item, idx) =>
                                item.subTitleText.trim() !== '' &&
                                <Box key={idx} sx={{ width: '50%' }}>
                                    <Typography variant='subtitle2' sx={{ color: "#d4d4d4", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitle ? item.subTitle : 'Location Address'}
                                    </Typography>
                                    <Typography variant='subtitle2' sx={{ color: "#64748b", fontWeight: 600, fontFamily: "Poppins" }}>
                                        {item.subTitleText ? item.subTitleText : '(no address found)'}
                                    </Typography>
                                </Box>
                            )}
                        </Box>
                        {locationImages.length > 0 ?
                            <Swiper
                                style={{
                                    "--swiper-navigation-color": "#469BD3",
                                    "--swiper-pagination-color": "#469BD3",
                                    height: isDrawerExpand ? 430 : 480,
                                    width: '100%',
                                    marginTop: 10,
                                    // background: "#D8EEFD"
                                }}
                                spaceBetween={8}
                                navigation={true}
                                modules={[FreeMode, Navigation, Thumbs]}
                                className="cursor-pointer"
                            >
                                {locationImages.map((imgsrc, imgidx) =>
                                    <SwiperSlide key={imgidx}>
                                        <img
                                            src={imgsrc}
                                            style={{
                                                display: 'block', objectFit: 'contain',
                                                height: '100%', width: '100%'
                                            }}
                                            alt={`img${imgidx}`}
                                        />
                                    </SwiperSlide>
                                )}
                            </Swiper> :
                            <Box sx={{ mt: 4 }}>
                                <Image src={locationOverview} layout='responsive' />
                            </Box>
                        }
                    </Box>
                </Box>
            </Box>
            <Box className='flex flex-row justify-between w-full pl-6 mt-4 mb-6'>
                <Box className='flex flex-col w-1/2'>
                    <Typography variant='h5' sx={{ color: "#061D2E", fontWeight: 600, fontFamily: "Poppins" }}>
                        {employeer && employeer.title ? employeer.title : 'Employers'}
                    </Typography>
                    <Box className='flex flex-row my-8 p-6 bg-[#eff6ff]'>
                        <Box className='flex flex-col w-1/2'>
                            <Typography variant='subtitle2' sx={{ color: "#469BD3", fontWeight: 600, fontFamily: "Poppins" }}>
                                Employers Name
                            </Typography>
                            <Box className='mt-4'>
                                {employeer && employeer.employers.length > 0 && employeer.employers.map((item, idx) =>
                                    <Typography key={idx} variant='subtitle2' sx={{ mb: 1, color: "#061D2E", fontFamily: "Poppins" }}>
                                        {item.labelText !== undefined ? item.labelText : '(name not found)'}
                                    </Typography>
                                )}
                            </Box>
                        </Box>
                        <Box className='flex flex-col w-1/2'>
                            <Typography variant='subtitle2' sx={{ color: "#469BD3", fontWeight: 600, fontFamily: "Poppins" }}>
                                Employee amount
                            </Typography>
                            <Box className='mt-4'>
                                {employeer && employeer.employers.length > 0 && employeer.employers.map((item, idx) =>
                                    <Typography key={idx} variant='subtitle2' sx={{ mb: 1, color: "#061D2E", fontFamily: "Poppins" }}>
                                        {item.departmentText !== undefined ? item.departmentText : '(designation not found)'}
                                    </Typography>
                                )}
                            </Box>
                        </Box>
                    </Box>
                </Box>
                <Box className='flex flex-row w-8/12 justify-end relative'>
                    <svg style={{ position: "absolute", top: -20, left: '12%' }} width="118" height="117" viewBox="0 0 118 117" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="58.9016" cy="58.5526" r="56.2876" transform="rotate(-123.315 58.9016 58.5526)" stroke="#85BDE2" strokeWidth="4" />
                    </svg>
                    <svg style={{ position: "absolute", top: -10, left: -20 }} width="41" height="41" viewBox="0 0 41 41" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="20.9556" cy="20.2174" r="18" transform="rotate(-123.315 20.9556 20.2174)" stroke="#85BDE2" strokeWidth="4" />
                    </svg>
                    <Box sx={{ width: '60%', mt: 2 }}>
                        <Image src={employeers} layout='responsive' />
                    </Box>
                    <Box sx={{ width: '80%', position: "absolute", top: '10%', left: '10%' }}>
                        <Image src={employeersImg} layout='responsive' />
                    </Box>
                </Box>
            </Box>
        </div>
    )
}

const LocationOverView = () => {

    //print
    const componentRef = useRef();
    const handlePrint = useReactToPrint({
        content: () => componentRef.current,
    });

    const router = useRouter()
    const { isDrawerExpand } = useSelector(store => logicloseState(store))
    let token = ''
    if (router.query.token) {
        token = router.query.token.split('____')[0]
    } else {
        token = getData('token')
    }
    const { data: locationSummaryData, isLoading: gettingLocationSummary, error: error1 } = useGetLocationSummaryQuery(token)
    const { data: employeer, isLoading: gettingEmployee, error: error2 } = useGetEmployersQuery(token)

    const randomPass = useMemo(() => Math.floor(1000 + Math.random() * 9000), [token])
    const sharedUrl = useMemo(() =>
        `${BASE_URL}/webView/locationOverView?token=${token}____${randomPass}`
        , [BASE_URL, token])

    const [locationSummary, setLocationSummary] = useState(null)
    const [locationImages, setLocationImages] = useState([])

    useEffect(() => {
        if (locationSummaryData !== undefined) {
            const images = []
            locationSummaryData.locationSummary.forEach((item) => {
                item.images.forEach((img) => {
                    images.push(img)
                })
            })
            setLocationImages(images)
            setLocationSummary(locationSummaryData)
        }
    }, [locationSummaryData])

    const PrintComp = () =>
        <Document ref={componentRef}>
            <Page size="A4" style={{
                flexDirection: 'column',
                backgroundColor: '#fff'
            }} orientation="portrait">
                <Box sx={{ width: '100%', mb: 4 }}>
                    <img
                        src={'https://storage.googleapis.com/logiclose/LocationOverviewPDF.png'}
                        style={{
                            display: 'block',
                            objectFit: 'contain'
                        }}
                        alt={`img`}
                    />
                    <Box sx={{
                        display: "flex", justifyContent: "center", alignItems: "center",
                        position: "absolute", top: '20%', left: "30%", width: 350
                    }}>
                        <Box sx={{ position: "relative" }}>
                            <svg width="194" height="131" viewBox="0 0 194 131" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M20.9168 122.584L19.5895 124.3L20.9168 122.584ZM5.45397 100.249L3.40686 100.967L3.41251 100.983L3.41841 100.999L5.45397 100.249ZM6.02667 32.2886L8.04448 33.0851L8.04798 33.0761L6.02667 32.2886ZM21.6804 9.18978L23.0817 10.8458L23.0845 10.8434L21.6804 9.18978ZM84.6773 30.9523L82.6301 31.6701L82.6358 31.6862L82.6417 31.7023L84.6773 30.9523ZM84.2955 98.9125L86.3133 99.709L86.3168 99.7001L84.2955 98.9125ZM68.4508 122.011L69.8365 123.68L69.8457 123.673L69.8548 123.665L68.4508 122.011ZM57.7604 114.757L55.8906 113.657L55.8785 113.678L55.8667 113.699L57.7604 114.757ZM63.4874 97.0035L65.6262 97.3661L63.4874 97.0035ZM62.9147 39.7337L60.7781 40.109L60.779 40.114L62.9147 39.7337ZM55.2787 17.5894L53.4342 18.7312L53.444 18.7469L53.454 18.7624L55.2787 17.5894ZM32.7526 15.8713L30.9224 14.7066L30.9097 14.7266L30.8974 14.7469L32.7526 15.8713ZM26.8347 33.434L24.7021 33.0364L24.6994 33.0509L24.6969 33.0654L26.8347 33.434ZM27.4074 91.2766L25.2708 91.6519L25.2717 91.6569L27.4074 91.2766ZM35.0434 113.23L33.2186 114.403L33.2284 114.418L33.2384 114.433L35.0434 113.23ZM45.1611 128.242C36.1707 128.242 28.5693 125.761 22.2442 120.868L19.5895 124.3C26.7546 129.843 35.316 132.58 45.1611 132.58V128.242ZM22.2442 120.868C15.8826 115.947 10.9418 108.869 7.48953 99.4989L3.41841 100.999C7.09306 110.973 12.4608 118.785 19.5895 124.3L22.2442 120.868ZM7.50108 99.531C4.1652 90.0176 2.469 78.6902 2.469 65.5051H-1.86963C-1.86963 79.046 -0.129643 90.8811 3.40686 100.967L7.50108 99.531ZM2.469 65.5051C2.469 53.2526 4.34438 42.4586 8.04446 33.0851L4.00887 31.4921C0.0729709 41.4631 -1.86963 52.8134 -1.86963 65.5051H2.469ZM8.04798 33.0761C11.7626 23.542 16.7926 16.1673 23.0817 10.8458L20.2792 7.53376C13.3326 13.4117 7.92674 21.4362 4.00535 31.5011L8.04798 33.0761ZM23.0845 10.8434C29.4346 5.45183 36.7629 2.76861 45.1611 2.76861V-1.57001C35.7419 -1.57001 27.4165 1.47376 20.2764 7.53613L23.0845 10.8434ZM45.1611 2.76861C54.1514 2.76861 61.7528 5.24897 68.0779 10.142L70.7326 6.71035C63.5676 1.16756 55.0062 -1.57001 45.1611 -1.57001V2.76861ZM68.0779 10.142C74.426 15.0528 79.3021 22.1791 82.6301 31.6701L86.7244 30.2345C83.18 20.1265 77.8748 12.2354 70.7326 6.71035L68.0779 10.142ZM82.6417 31.7023C86.0948 41.075 87.8531 52.3261 87.8531 65.5051H92.1917C92.1917 51.9582 90.3866 40.1741 86.7128 30.2024L82.6417 31.7023ZM87.8531 65.5051C87.8531 77.7568 85.978 88.6185 82.2741 98.125L86.3168 99.7001C90.2489 89.6076 92.1917 78.1976 92.1917 65.5051H87.8531ZM82.2777 98.116C78.5677 107.515 73.4759 114.899 67.0468 120.358L69.8548 123.665C76.9159 117.67 82.3872 109.655 86.3133 99.709L82.2777 98.116ZM67.0651 120.342C60.7101 125.618 53.4373 128.242 45.1611 128.242V132.58C54.4476 132.58 62.7012 129.604 69.8365 123.68L67.0651 120.342ZM48.5973 123.417C53.3399 123.417 57.0029 120.56 59.6541 115.815L55.8667 113.699C53.6818 117.609 51.236 119.078 48.5973 119.078V123.417ZM59.6302 115.857C62.3598 111.217 64.3299 105.014 65.6262 97.3661L61.3486 96.641C60.0996 104.01 58.2517 109.644 55.8906 113.657L59.6302 115.857ZM65.6262 97.3661C66.9235 89.712 67.5657 81.0605 67.5657 71.423H63.2271C63.2271 80.8755 62.5966 89.2776 61.3486 96.641L65.6262 97.3661ZM67.5657 71.423C67.5657 59.4903 66.732 48.7962 65.0504 39.3534L60.779 40.114C62.4063 49.252 63.2271 59.6842 63.2271 71.423H67.5657ZM65.0513 39.3583C63.3697 29.7864 60.7538 22.0945 57.1035 16.4163L53.454 18.7624C56.676 23.7746 59.1508 30.8456 60.7781 40.109L65.0513 39.3583ZM57.1232 16.4475C53.5005 10.5955 48.5371 7.40226 42.2976 7.40226V11.7409C46.7484 11.7409 50.4391 13.8929 53.4342 18.7312L57.1232 16.4475ZM42.2976 7.40226C37.6169 7.40226 33.8386 10.124 30.9224 14.7066L34.5828 17.0359C37.0118 13.2189 39.5968 11.7409 42.2976 11.7409V7.40226ZM30.8974 14.7469C28.1628 19.2589 26.1263 25.3975 24.7021 33.0364L28.9673 33.8316C30.3429 26.4531 32.2517 20.8831 34.6078 16.9956L30.8974 14.7469ZM24.6969 33.0654C23.398 40.5991 22.7564 49.3178 22.7564 59.2054H27.095C27.095 49.4941 27.7261 41.0318 28.9725 33.8026L24.6969 33.0654ZM22.7564 59.2054C22.7564 71.2645 23.59 82.084 25.2708 91.6519L29.544 90.9012C27.9159 81.6337 27.095 71.0724 27.095 59.2054H22.7564ZM25.2717 91.6569C26.9543 101.105 29.5712 108.729 33.2186 114.403L36.8682 112.057C33.6432 107.04 31.1695 100.029 29.5431 90.8962L25.2717 91.6569ZM33.2384 114.433C37.1233 120.261 42.2648 123.417 48.5973 123.417V119.078C43.9848 119.078 40.0904 116.89 36.8484 112.027L33.2384 114.433ZM128.991 128.311L128.429 130.406L128.991 128.311ZM114.674 121.82L113.413 123.586L113.435 123.602L113.458 123.617L114.674 121.82ZM106.274 113.803L104.52 115.079L106.274 113.803ZM104.938 99.2943L103.735 97.4894H103.735L104.938 99.2943ZM121.355 98.1489L122.889 96.615L122.254 95.9796H121.355V98.1489ZM123.073 99.867H125.243V98.9685L124.607 98.3331L123.073 99.867ZM128.419 117.621L127.117 119.356L127.152 119.382L127.187 119.406L128.419 117.621ZM161.444 114.184L159.785 112.787L159.774 112.8L159.763 112.813L161.444 114.184ZM160.681 75.0501L159.087 76.5215L160.681 75.0501ZM126.319 67.605H124.149V69.7743H126.319V67.605ZM126.319 58.8236V56.6543H124.149V58.8236H126.319ZM153.617 51.1877L152.064 49.6733L152.054 49.6833L152.045 49.6935L153.617 51.1877ZM156.481 14.7259L158.128 13.3141L156.481 14.7259ZM130.9 14.1532L132.403 15.7181L132.404 15.7169L130.9 14.1532ZM126.128 34.3885L127.749 35.8297L128.297 35.2133V34.3885H126.128ZM124.601 36.1066V38.2759H125.575L126.222 37.5478L124.601 36.1066ZM108.183 34.9612L106.939 36.7384L107.002 36.7821L107.067 36.8214L108.183 34.9612ZM119.446 9.95337L120.594 11.7944L120.605 11.7871L120.617 11.7797L119.446 9.95337ZM133.382 2.89009L132.66 0.844448L132.66 0.844449L133.382 2.89009ZM168.126 4.41729L167.228 6.39216L167.255 6.40433L167.282 6.41577L168.126 4.41729ZM181.489 14.9168L179.707 16.1541L179.727 16.1826L179.747 16.2104L181.489 14.9168ZM177.671 49.0878L176.227 47.4683L176.218 47.4762L176.21 47.4842L177.671 49.0878ZM155.526 59.969L155.049 57.8528L155.235 62.1187L155.526 59.969ZM183.398 71.2321L181.929 72.8286L181.937 72.8358L181.945 72.843L183.398 71.2321ZM186.452 112.657L184.77 111.288L184.76 111.3L184.75 111.312L186.452 112.657ZM169.08 125.638L169.952 127.625L169.08 125.638ZM145.6 128.242C139.919 128.242 134.573 127.563 129.553 126.216L128.429 130.406C133.845 131.859 139.571 132.58 145.6 132.58V128.242ZM129.553 126.216C124.56 124.876 120.01 122.811 115.889 120.024L113.458 123.617C117.992 126.684 122.986 128.946 128.429 130.406L129.553 126.216ZM115.935 120.055C112.513 117.611 109.897 115.096 108.029 112.527L104.52 115.079C106.724 118.109 109.708 120.939 113.413 123.586L115.935 120.055ZM108.029 112.527C106.237 110.063 105.389 107.513 105.389 104.83H101.051C101.051 108.511 102.239 111.942 104.52 115.079L108.029 112.527ZM105.389 104.83C105.389 103.485 105.524 102.531 105.721 101.894C105.919 101.258 106.122 101.112 106.141 101.099L103.735 97.4894C102.609 98.2401 101.953 99.3988 101.578 100.608C101.202 101.817 101.051 103.249 101.051 104.83H105.389ZM106.141 101.099C106.751 100.693 108.009 100.318 110.283 100.318V95.9796C107.721 95.9796 105.416 96.3684 103.735 97.4894L106.141 101.099ZM110.283 100.318H121.355V95.9796H110.283V100.318ZM119.821 99.6829L121.539 101.401L124.607 98.3331L122.889 96.615L119.821 99.6829ZM120.904 99.867V106.358H125.243V99.867H120.904ZM120.904 106.358C120.904 111.809 122.955 116.235 127.117 119.356L129.72 115.885C126.755 113.661 125.243 110.579 125.243 106.358H120.904ZM127.187 119.406C131.386 122.302 137.17 123.608 144.263 123.608V119.269C137.612 119.269 132.833 118.03 129.65 115.835L127.187 119.406ZM144.263 123.608C152.277 123.608 158.683 121 163.125 115.556L159.763 112.813C156.314 117.041 151.267 119.269 144.263 119.269V123.608ZM163.104 115.582C167.565 110.284 169.722 103.587 169.722 95.6672H165.384C165.384 102.765 163.469 108.413 159.785 112.787L163.104 115.582ZM169.722 95.6672C169.722 86.509 167.326 79.0515 162.275 73.5787L159.087 76.5215C163.198 80.9755 165.384 87.2627 165.384 95.6672H169.722ZM162.275 73.5787C157.076 67.9473 148.359 65.4357 136.818 65.4357V69.7743C147.931 69.7743 155.122 72.2261 159.087 76.5215L162.275 73.5787ZM136.818 65.4357H126.319V69.7743H136.818V65.4357ZM128.488 67.605V58.8236H124.149V67.605H128.488ZM126.319 60.993H133.955V56.6543H126.319V60.993ZM133.955 60.993C142.707 60.993 149.871 58.2803 155.19 52.6818L152.045 49.6935C147.691 54.2763 141.747 56.6543 133.955 56.6543V60.993ZM155.171 52.7021C160.581 47.1533 163.232 40.0301 163.232 31.525H158.893C158.893 39.0555 156.581 45.0407 152.064 49.6733L155.171 52.7021ZM163.232 31.525C163.232 23.6747 161.675 17.4521 158.128 13.3141L154.834 16.1376C157.396 19.1265 158.893 24.1033 158.893 31.525H163.232ZM158.128 13.3141C154.572 9.16511 149.517 7.21137 143.309 7.21137V11.55C148.555 11.55 152.281 13.1597 154.834 16.1376L158.128 13.3141ZM143.309 7.21137C137.835 7.21137 133.144 8.98591 129.397 12.5894L132.404 15.7169C135.274 12.9571 138.856 11.55 143.309 11.55V7.21137ZM129.398 12.5882C125.713 16.1262 123.958 20.87 123.958 26.5616H128.297C128.297 21.8174 129.725 18.2889 132.403 15.7181L129.398 12.5882ZM123.958 26.5616V34.3885H128.297V26.5616H123.958ZM124.506 32.9473L122.979 34.6654L126.222 37.5478L127.749 35.8297L124.506 32.9473ZM124.601 33.9373H113.91V38.2759H124.601V33.9373ZM113.91 33.9373C111.511 33.9373 110.072 33.5648 109.299 33.101L107.067 36.8214C108.84 37.8848 111.219 38.2759 113.91 38.2759V33.9373ZM109.427 33.184C109.307 33.1001 109.05 32.8477 108.822 32.1188C108.593 31.3859 108.444 30.3205 108.444 28.8524H104.105C104.105 30.566 104.274 32.1096 104.681 33.4129C105.089 34.7203 105.787 35.9315 106.939 36.7384L109.427 33.184ZM108.444 28.8524C108.444 22.7802 112.136 17.0652 120.594 11.7944L118.299 8.1123C109.194 13.7865 104.105 20.6708 104.105 28.8524H108.444ZM120.617 11.7797C125.477 8.66405 129.972 6.39421 134.104 4.93573L132.66 0.844449C128.138 2.44037 123.342 4.87938 118.276 8.12707L120.617 11.7797ZM134.104 4.93573C138.132 3.51391 143.154 2.76861 149.227 2.76861V-1.57001C142.827 -1.57001 137.286 -0.788111 132.66 0.844448L134.104 4.93573ZM149.227 2.76861C155.959 2.76861 161.947 3.99154 167.228 6.39216L169.023 2.44242C163.105 -0.247612 156.493 -1.57001 149.227 -1.57001V2.76861ZM167.282 6.41577C172.675 8.69293 176.786 11.9477 179.707 16.1541L183.27 13.6794C179.828 8.72264 175.03 4.97777 168.969 2.41881L167.282 6.41577ZM179.747 16.2104C182.756 20.2609 184.283 25.0165 184.283 30.5705H188.621C188.621 24.1616 186.839 18.4813 183.23 13.6231L179.747 16.2104ZM184.283 30.5705C184.283 37.0126 181.672 42.6158 176.227 47.4683L179.114 50.7072C185.378 45.1239 188.621 38.3823 188.621 30.5705H184.283ZM176.21 47.4842C170.81 52.4035 163.79 55.883 155.049 57.8528L156.003 62.0853C165.334 59.9825 173.077 56.2079 179.132 50.6913L176.21 47.4842ZM155.235 62.1187C167.193 63.738 176.004 67.3781 181.929 72.8286L184.866 69.6356C178.064 63.3776 168.295 59.509 155.817 57.8193L155.235 62.1187ZM181.945 72.843C187.934 78.2453 190.964 85.3369 190.964 94.3309H195.303C195.303 84.2351 191.842 75.9274 184.851 69.6212L181.945 72.843ZM190.964 94.3309C190.964 100.553 188.925 106.183 184.77 111.288L188.134 114.027C192.888 108.187 195.303 101.599 195.303 94.3309H190.964ZM184.75 111.312C180.672 116.47 175.182 120.593 168.209 123.652L169.952 127.625C177.486 124.32 183.578 119.789 188.154 114.003L184.75 111.312ZM168.209 123.652C161.246 126.706 153.718 128.242 145.6 128.242V132.58C154.281 132.58 162.406 130.934 169.952 127.625L168.209 123.652Z" fill="url(#paint0_linear_806_8113)" />
                                <defs>
                                    <linearGradient id="paint0_linear_806_8113" x1="96.5" y1="-5.49805" x2="96.5" y2="128.999" gradientUnits="userSpaceOnUse">
                                        <stop stop-color="white" />
                                        <stop offset="1" stop-color="white" stop-opacity="0" />
                                    </linearGradient>
                                </defs>
                            </svg>
                            <svg style={{ position: "absolute", bottom: -20, left: -100 }} width="400" height="53" viewBox="0 0 611 53" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.794 44.674H24.974V52H0.554V5.932H9.794V44.674ZM47.083 52.594C43.563 52.594 40.395 51.824 37.579 50.284C34.763 48.7 32.541 46.478 30.913 43.618C29.329 40.758 28.537 37.458 28.537 33.718C28.537 29.978 29.351 26.678 30.979 23.818C32.651 20.958 34.917 18.758 37.777 17.218C40.637 15.634 43.827 14.842 47.347 14.842C50.867 14.842 54.057 15.634 56.917 17.218C59.777 18.758 62.021 20.958 63.649 23.818C65.321 26.678 66.157 29.978 66.157 33.718C66.157 37.458 65.299 40.758 63.583 43.618C61.911 46.478 59.623 48.7 56.719 50.284C53.859 51.824 50.647 52.594 47.083 52.594ZM47.083 44.542C48.755 44.542 50.317 44.146 51.769 43.354C53.265 42.518 54.453 41.286 55.333 39.658C56.213 38.03 56.653 36.05 56.653 33.718C56.653 30.242 55.729 27.58 53.881 25.732C52.077 23.84 49.855 22.894 47.215 22.894C44.575 22.894 42.353 23.84 40.549 25.732C38.789 27.58 37.909 30.242 37.909 33.718C37.909 37.194 38.767 39.878 40.483 41.77C42.243 43.618 44.443 44.542 47.083 44.542ZM70.5589 33.718C70.5589 29.934 71.3289 26.634 72.8689 23.818C74.4089 20.958 76.5429 18.758 79.2709 17.218C81.9989 15.634 85.1229 14.842 88.6429 14.842C93.1749 14.842 96.9149 15.986 99.8629 18.274C102.855 20.518 104.857 23.686 105.869 27.778H95.9029C95.3749 26.194 94.4729 24.962 93.1969 24.082C91.9649 23.158 90.4249 22.696 88.5769 22.696C85.9369 22.696 83.8469 23.664 82.3069 25.6C80.7669 27.492 79.9969 30.198 79.9969 33.718C79.9969 37.194 80.7669 39.9 82.3069 41.836C83.8469 43.728 85.9369 44.674 88.5769 44.674C92.3169 44.674 94.7589 43.002 95.9029 39.658H105.869C104.857 43.618 102.855 46.764 99.8629 49.096C96.8709 51.428 93.1309 52.594 88.6429 52.594C85.1229 52.594 81.9989 51.824 79.2709 50.284C76.5429 48.7 74.4089 46.5 72.8689 43.684C71.3289 40.824 70.5589 37.502 70.5589 33.718ZM110.262 33.586C110.262 29.89 110.988 26.612 112.44 23.752C113.936 20.892 115.938 18.692 118.446 17.152C120.998 15.612 123.836 14.842 126.96 14.842C129.688 14.842 132.064 15.392 134.088 16.492C136.156 17.592 137.806 18.978 139.038 20.65V15.436H148.344V52H139.038V46.654C137.85 48.37 136.2 49.8 134.088 50.944C132.02 52.044 129.622 52.594 126.894 52.594C123.814 52.594 120.998 51.802 118.446 50.218C115.938 48.634 113.936 46.412 112.44 43.552C110.988 40.648 110.262 37.326 110.262 33.586ZM139.038 33.718C139.038 31.474 138.598 29.56 137.718 27.976C136.838 26.348 135.65 25.116 134.154 24.28C132.658 23.4 131.052 22.96 129.336 22.96C127.62 22.96 126.036 23.378 124.584 24.214C123.132 25.05 121.944 26.282 121.02 27.91C120.14 29.494 119.7 31.386 119.7 33.586C119.7 35.786 120.14 37.722 121.02 39.394C121.944 41.022 123.132 42.276 124.584 43.156C126.08 44.036 127.664 44.476 129.336 44.476C131.052 44.476 132.658 44.058 134.154 43.222C135.65 42.342 136.838 41.11 137.718 39.526C138.598 37.898 139.038 35.962 139.038 33.718ZM168.126 23.026V40.714C168.126 41.946 168.412 42.848 168.984 43.42C169.6 43.948 170.612 44.212 172.02 44.212H176.31V52H170.502C162.714 52 158.82 48.216 158.82 40.648V23.026H154.464V15.436H158.82V6.394H168.126V15.436H176.31V23.026H168.126ZM187.642 11.08C186.014 11.08 184.65 10.574 183.55 9.562C182.494 8.506 181.966 7.208 181.966 5.668C181.966 4.128 182.494 2.852 183.55 1.84C184.65 0.783997 186.014 0.255997 187.642 0.255997C189.27 0.255997 190.612 0.783997 191.668 1.84C192.768 2.852 193.318 4.128 193.318 5.668C193.318 7.208 192.768 8.506 191.668 9.562C190.612 10.574 189.27 11.08 187.642 11.08ZM192.196 15.436V52H182.956V15.436H192.196ZM217.561 52.594C214.041 52.594 210.873 51.824 208.057 50.284C205.241 48.7 203.019 46.478 201.391 43.618C199.807 40.758 199.015 37.458 199.015 33.718C199.015 29.978 199.829 26.678 201.457 23.818C203.129 20.958 205.395 18.758 208.255 17.218C211.115 15.634 214.305 14.842 217.825 14.842C221.345 14.842 224.535 15.634 227.395 17.218C230.255 18.758 232.499 20.958 234.127 23.818C235.799 26.678 236.635 29.978 236.635 33.718C236.635 37.458 235.777 40.758 234.061 43.618C232.389 46.478 230.101 48.7 227.197 50.284C224.337 51.824 221.125 52.594 217.561 52.594ZM217.561 44.542C219.233 44.542 220.795 44.146 222.247 43.354C223.743 42.518 224.931 41.286 225.811 39.658C226.691 38.03 227.131 36.05 227.131 33.718C227.131 30.242 226.207 27.58 224.359 25.732C222.555 23.84 220.333 22.894 217.693 22.894C215.053 22.894 212.831 23.84 211.027 25.732C209.267 27.58 208.387 30.242 208.387 33.718C208.387 37.194 209.245 39.878 210.961 41.77C212.721 43.618 214.921 44.542 217.561 44.542ZM263.675 14.908C268.031 14.908 271.551 16.294 274.235 19.066C276.919 21.794 278.261 25.622 278.261 30.55V52H269.021V31.804C269.021 28.9 268.295 26.678 266.843 25.138C265.391 23.554 263.411 22.762 260.903 22.762C258.351 22.762 256.327 23.554 254.831 25.138C253.379 26.678 252.653 28.9 252.653 31.804V52H243.413V15.436H252.653V19.99C253.885 18.406 255.447 17.174 257.339 16.294C259.275 15.37 261.387 14.908 263.675 14.908ZM324.159 52.462C319.847 52.462 315.887 51.45 312.279 49.426C308.671 47.402 305.811 44.608 303.699 41.044C301.587 37.436 300.531 33.366 300.531 28.834C300.531 24.346 301.587 20.32 303.699 16.756C305.811 13.148 308.671 10.332 312.279 8.308C315.887 6.284 319.847 5.272 324.159 5.272C328.515 5.272 332.475 6.284 336.039 8.308C339.647 10.332 342.485 13.148 344.553 16.756C346.665 20.32 347.721 24.346 347.721 28.834C347.721 33.366 346.665 37.436 344.553 41.044C342.485 44.608 339.647 47.402 336.039 49.426C332.431 51.45 328.471 52.462 324.159 52.462ZM324.159 44.212C326.931 44.212 329.373 43.596 331.485 42.364C333.597 41.088 335.247 39.284 336.435 36.952C337.623 34.62 338.217 31.914 338.217 28.834C338.217 25.754 337.623 23.07 336.435 20.782C335.247 18.45 333.597 16.668 331.485 15.436C329.373 14.204 326.931 13.588 324.159 13.588C321.387 13.588 318.923 14.204 316.767 15.436C314.655 16.668 313.005 18.45 311.817 20.782C310.629 23.07 310.035 25.754 310.035 28.834C310.035 31.914 310.629 34.62 311.817 36.952C313.005 39.284 314.655 41.088 316.767 42.364C318.923 43.596 321.387 44.212 324.159 44.212ZM369.841 43.486L379.081 15.436H388.915L375.385 52H364.165L350.701 15.436H360.601L369.841 43.486ZM428.095 32.926C428.095 34.246 428.007 35.434 427.831 36.49H401.101C401.321 39.13 402.245 41.198 403.873 42.694C405.501 44.19 407.503 44.938 409.879 44.938C413.311 44.938 415.753 43.464 417.205 40.516H427.171C426.115 44.036 424.091 46.94 421.099 49.228C418.107 51.472 414.433 52.594 410.077 52.594C406.557 52.594 403.389 51.824 400.573 50.284C397.801 48.7 395.623 46.478 394.039 43.618C392.499 40.758 391.729 37.458 391.729 33.718C391.729 29.934 392.499 26.612 394.039 23.752C395.579 20.892 397.735 18.692 400.507 17.152C403.279 15.612 406.469 14.842 410.077 14.842C413.553 14.842 416.655 15.59 419.383 17.086C422.155 18.582 424.289 20.716 425.785 23.488C427.325 26.216 428.095 29.362 428.095 32.926ZM418.525 30.286C418.481 27.91 417.623 26.018 415.951 24.61C414.279 23.158 412.233 22.432 409.813 22.432C407.525 22.432 405.589 23.136 404.005 24.544C402.465 25.908 401.519 27.822 401.167 30.286H418.525ZM444.079 21.112C445.267 19.176 446.807 17.658 448.699 16.558C450.635 15.458 452.835 14.908 455.299 14.908V24.61H452.857C449.953 24.61 447.753 25.292 446.257 26.656C444.805 28.02 444.079 30.396 444.079 33.784V52H434.839V15.436H444.079V21.112ZM476.769 43.486L486.009 15.436H495.843L482.313 52H471.093L457.629 15.436H467.529L476.769 43.486ZM505.719 11.08C504.091 11.08 502.727 10.574 501.627 9.562C500.571 8.506 500.043 7.208 500.043 5.668C500.043 4.128 500.571 2.852 501.627 1.84C502.727 0.783997 504.091 0.255997 505.719 0.255997C507.347 0.255997 508.689 0.783997 509.745 1.84C510.845 2.852 511.395 4.128 511.395 5.668C511.395 7.208 510.845 8.506 509.745 9.562C508.689 10.574 507.347 11.08 505.719 11.08ZM510.273 15.436V52H501.033V15.436H510.273ZM553.392 32.926C553.392 34.246 553.304 35.434 553.128 36.49H526.398C526.618 39.13 527.542 41.198 529.17 42.694C530.798 44.19 532.8 44.938 535.176 44.938C538.608 44.938 541.05 43.464 542.502 40.516H552.468C551.412 44.036 549.388 46.94 546.396 49.228C543.404 51.472 539.73 52.594 535.374 52.594C531.854 52.594 528.686 51.824 525.87 50.284C523.098 48.7 520.92 46.478 519.336 43.618C517.796 40.758 517.026 37.458 517.026 33.718C517.026 29.934 517.796 26.612 519.336 23.752C520.876 20.892 523.032 18.692 525.804 17.152C528.576 15.612 531.766 14.842 535.374 14.842C538.85 14.842 541.952 15.59 544.68 17.086C547.452 18.582 549.586 20.716 551.082 23.488C552.622 26.216 553.392 29.362 553.392 32.926ZM543.822 30.286C543.778 27.91 542.92 26.018 541.248 24.61C539.576 23.158 537.53 22.432 535.11 22.432C532.822 22.432 530.886 23.136 529.302 24.544C527.762 25.908 526.816 27.822 526.464 30.286H543.822ZM610.824 15.436L600.132 52H590.166L583.5 26.458L576.834 52H566.802L556.044 15.436H565.416L571.884 43.288L578.88 15.436H588.648L595.512 43.222L601.98 15.436H610.824Z" fill="white" />
                            </svg>
                        </Box>
                    </Box>
                </Box>
                <LocationOverViewComp locationSummary={locationSummary} locationImages={locationImages}
                    employeer={employeer} isDrawerExpand={isDrawerExpand}
                />
            </Page>
        </Document>

    return (
        <Box>
            <Head>
                <title>Location Overview</title>
                <meta name="description" content="LOGICLOSE CLOSING CONCIERGE" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <LogiCLoseWebLayout title={'Location Overview'} queryToken={router.query.token}
                sharedUrl={sharedUrl} randomPass={randomPass}
                editUrl={'/locationOverView/locationSummary'}>
                <Box sx={{ display: "flex", justifyContent: 'flex-end', width: '95%' }}>
                    <Button
                        className='bg-[#469BD3]'
                        type="submit"
                        variant="contained"
                        sx={{
                            marginLeft: "auto",
                            letterSpacing: 1, mt: 2,
                            fontFamily: "Poppins", fontWeight: "600"
                        }}
                        onClick={handlePrint}
                    >
                        Download Pdf
                    </Button>
                </Box>
                <div style={{ display: "none" }}>
                    {PrintComp()}
                </div>
                <LocationOverViewComp locationSummary={locationSummary} locationImages={locationImages}
                    employeer={employeer} isDrawerExpand={isDrawerExpand}
                />
            </LogiCLoseWebLayout>
        </Box>
    )
}

export default LocationOverView
// export default IsAuthHOC(LocationOverView, "/webView/locationOverView")